{"ast":null,"code":"var _jsxFileName = \"/Users/Q/Tech/FullStackDemo/src/note_frontend/src/pages/Notes/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FormControl, InputLabel, Select, MenuItem, Input, Button, CircularProgress, Grid, IconButton, Paper } from \"@material-ui/core\";\nimport { useMutation, gql, useQuery, useSubscription } from \"@apollo/client\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NoteCard from \"./NoteCard\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_NOTES = gql`\n  subscription getNotes {\n    notes_notes {\n      content\n      created_on\n      updated_at\n    }\n  }\n`;\nconst ADD_NOTES = gql`\n  mutation addNotes($content: String) {\n    insert_notes_notes_one(\n      object: { content: $content, created_on: \"NOW()\", updated_at: \"NOW()\" }\n    ) {\n      id\n      content\n      created_on\n      updated_at\n    }\n  }\n`;\nconst DELETE_NOTES = gql`\n  mutation deleteNote($id: Int!) {\n    delete_notes_notes_by_pk(id: $id) {\n      id\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => {\n  root: {}\n});\n\nconst Notes = () => {\n  _s();\n\n  var _data$notes_notes;\n\n  const classes = useStyles();\n  const {\n    data,\n    loading,\n    error\n  } = useSubscription(GET_NOTES);\n  console.log(data, loading, error);\n  const [addNote] = useMutation(ADD_NOTES);\n  const [deleteNote] = useMutation(DELETE_NOTES);\n  if (loading) return \"Loading\";\n  if (error) return \"Error\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.topRow,\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(IconButton // onClick={() => handleAdd()}\n        , {\n          \"aria-label\": \"Edit\",\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: (data === null || data === void 0 ? void 0 : (_data$notes_notes = data.notes_notes) === null || _data$notes_notes === void 0 ? void 0 : _data$notes_notes.length) ? \"good\" : \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notes, \"cpWvQhVWir+rUh/kiAOhdO9Dxss=\", false, function () {\n  return [useStyles, useSubscription, useMutation, useMutation];\n});\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/Q/Tech/FullStackDemo/src/note_frontend/src/pages/Notes/index.js"],"names":["React","useState","FormControl","InputLabel","Select","MenuItem","Input","Button","CircularProgress","Grid","IconButton","Paper","useMutation","gql","useQuery","useSubscription","makeStyles","NoteCard","Add","AddIcon","GET_NOTES","ADD_NOTES","DELETE_NOTES","useStyles","theme","root","Notes","classes","data","loading","error","console","log","addNote","deleteNote","topRow","notes_notes","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,gBAPF,EAQEC,IARF,EASEC,UATF,EAUEC,KAVF,QAWO,mBAXP;AAYA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,QAA3B,EAAqCC,eAArC,QAA4D,gBAA5D;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,GAAG,IAAIC,OAAhB,QAA+B,oBAA/B;;AAEA,MAAMC,SAAS,GAAGP,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMQ,SAAS,GAAGR,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMS,YAAY,GAAGT,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMU,SAAS,GAAGP,UAAU,CAAEQ,KAAD,IAAW;AACtCC,EAAAA,IAAI,EAAE,CACL;AACF,CAH2B,CAA5B;;AAKA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA;;AAClB,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2Bf,eAAe,CAACK,SAAD,CAAhD;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,OAAlB,EAA2BC,KAA3B;AACA,QAAM,CAACG,OAAD,IAAYrB,WAAW,CAACS,SAAD,CAA7B;AACA,QAAM,CAACa,UAAD,IAAetB,WAAW,CAACU,YAAD,CAAhC;AACA,MAAIO,OAAJ,EAAa,OAAO,SAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,OAAP;AACX,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEH,OAAO,CAACQ,MAAnC;AAA2C,MAAA,SAAS,MAApD;AAAA,6BACE,QAAC,KAAD;AAAA,+BACE,QAAC,UAAD,CACE;AADF;AAEE,wBAAW,MAFb;AAGE,UAAA,KAAK,EAAC,SAHR;AAAA,iCAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,gBAAiB,CAAAP,IAAI,SAAJ,IAAAA,IAAI,WAAJ,iCAAAA,IAAI,CAAEQ,WAAN,wEAAmBC,MAAnB,IAA4B,MAA5B,GAAqC;AAAtD;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxBD;;GAAMX,K;UACYH,S,EACiBR,e,EAEfH,W,EACGA,W;;;KALjBc,K;AA0BN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\"\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Input,\n  Button,\n  CircularProgress,\n  Grid,\n  IconButton,\n  Paper\n} from \"@material-ui/core\"\nimport { useMutation, gql, useQuery, useSubscription } from \"@apollo/client\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport NoteCard from \"./NoteCard\"\nimport { Add as AddIcon } from \"@material-ui/icons\"\n\nconst GET_NOTES = gql`\n  subscription getNotes {\n    notes_notes {\n      content\n      created_on\n      updated_at\n    }\n  }\n`\n\nconst ADD_NOTES = gql`\n  mutation addNotes($content: String) {\n    insert_notes_notes_one(\n      object: { content: $content, created_on: \"NOW()\", updated_at: \"NOW()\" }\n    ) {\n      id\n      content\n      created_on\n      updated_at\n    }\n  }\n`\n\nconst DELETE_NOTES = gql`\n  mutation deleteNote($id: Int!) {\n    delete_notes_notes_by_pk(id: $id) {\n      id\n    }\n  }\n`\n\nconst useStyles = makeStyles((theme) => {\n  root: {\n  }\n})\n\nconst Notes = () => {\n  const classes = useStyles()\n  const { data, loading, error } = useSubscription(GET_NOTES)\n  console.log(data, loading, error)\n  const [addNote] = useMutation(ADD_NOTES)\n  const [deleteNote] = useMutation(DELETE_NOTES)\n  if (loading) return \"Loading\"\n  if (error) return \"Error\"\n  return (\n    <div>\n      <Grid container className={classes.topRow} container>\n        <Paper>\n          <IconButton\n            // onClick={() => handleAdd()}\n            aria-label=\"Edit\"\n            color=\"inherit\"\n          >\n            <AddIcon />\n          </IconButton>\n        </Paper>\n      </Grid>\n      <Grid container>{data?.notes_notes?.length ? \"good\" : \"add\"}</Grid>\n    </div>\n  )\n}\n\nexport default Notes\n"]},"metadata":{},"sourceType":"module"}