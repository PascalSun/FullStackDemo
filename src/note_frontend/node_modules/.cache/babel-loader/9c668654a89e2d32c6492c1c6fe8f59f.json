{"ast":null,"code":"var _jsxFileName = \"/Users/Q/Tech/FullStackDemo/src/note_frontend/src/pages/Notes/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FormControl, InputLabel, Select, MenuItem, Input, Button, CircularProgress, Grid, IconButton, Paper, TextField } from \"@material-ui/core\";\nimport { useMutation, gql, useQuery, useSubscription } from \"@apollo/client\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NoteCard from \"./NoteCard\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_NOTES = gql`\n  subscription getNotes {\n    notes_notes {\n      content\n      created_on\n      updated_at\n    }\n  }\n`;\nconst ADD_NOTES = gql`\n  mutation addNotes($content: String) {\n    insert_notes_notes_one(\n      object: { content: $content, created_on: \"NOW()\", updated_at: \"NOW()\" }\n    ) {\n      id\n      content\n      created_on\n      updated_at\n    }\n  }\n`;\nconst DELETE_NOTES = gql`\n  mutation deleteNote($id: Int!) {\n    delete_notes_notes_by_pk(id: $id) {\n      id\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    margin: \"10px\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  addNotes: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n}));\n\nconst Notes = () => {\n  _s();\n\n  var _data$notes_notes;\n\n  const classes = useStyles();\n  const {\n    data,\n    loading,\n    error\n  } = useSubscription(GET_NOTES);\n  console.log(data, loading, error);\n  const [addNote] = useMutation(ADD_NOTES);\n  const [deleteNote] = useMutation(DELETE_NOTES);\n  const [note, setNote] = useState(\"\");\n  if (loading) return \"Loading\";\n  if (error) return \"Error\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.topRow,\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-multiline-static\",\n          label: \"Add Notes\",\n          multiline: true,\n          rows: 4,\n          value: note,\n          variant: \"outlined\",\n          onChange: e => setNote(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => addNote({\n            variables: {\n              content: note\n            }\n          }),\n          \"aria-label\": \"Edit\",\n          fullwidth: true,\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: (data === null || data === void 0 ? void 0 : (_data$notes_notes = data.notes_notes) === null || _data$notes_notes === void 0 ? void 0 : _data$notes_notes.length) ? \"good\" : \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notes, \"c4R+tGdPPCum1LdnHuRfrfxZai4=\", false, function () {\n  return [useStyles, useSubscription, useMutation, useMutation];\n});\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/Q/Tech/FullStackDemo/src/note_frontend/src/pages/Notes/index.js"],"names":["React","useState","FormControl","InputLabel","Select","MenuItem","Input","Button","CircularProgress","Grid","IconButton","Paper","TextField","useMutation","gql","useQuery","useSubscription","makeStyles","NoteCard","Add","AddIcon","GET_NOTES","ADD_NOTES","DELETE_NOTES","useStyles","theme","root","width","margin","display","justifyContent","addNotes","Notes","classes","data","loading","error","console","log","addNote","deleteNote","note","setNote","topRow","e","target","value","variables","content","notes_notes","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Input,\n  Button,\n  CircularProgress,\n  Grid,\n  IconButton,\n  Paper,\n  TextField,\n} from \"@material-ui/core\"\nimport { useMutation, gql, useQuery, useSubscription } from \"@apollo/client\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport NoteCard from \"./NoteCard\"\nimport { Add as AddIcon } from \"@material-ui/icons\"\n\nconst GET_NOTES = gql`\n  subscription getNotes {\n    notes_notes {\n      content\n      created_on\n      updated_at\n    }\n  }\n`\n\nconst ADD_NOTES = gql`\n  mutation addNotes($content: String) {\n    insert_notes_notes_one(\n      object: { content: $content, created_on: \"NOW()\", updated_at: \"NOW()\" }\n    ) {\n      id\n      content\n      created_on\n      updated_at\n    }\n  }\n`\n\nconst DELETE_NOTES = gql`\n  mutation deleteNote($id: Int!) {\n    delete_notes_notes_by_pk(id: $id) {\n      id\n    }\n  }\n`\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    margin: \"10px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  addNotes: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}))\n\nconst Notes = () => {\n  const classes = useStyles()\n  const { data, loading, error } = useSubscription(GET_NOTES)\n  console.log(data, loading, error)\n  const [addNote] = useMutation(ADD_NOTES)\n  const [deleteNote] = useMutation(DELETE_NOTES)\n  const [note, setNote] = useState(\"\")\n  if (loading) return \"Loading\"\n  if (error) return \"Error\"\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.topRow} container>\n        <Paper>\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"Add Notes\"\n            multiline\n            rows={4}\n            value={note}\n            variant=\"outlined\"\n            onChange={(e) => setNote(e.target.value)}\n          />\n          <IconButton\n            onClick={() =>\n              addNote({\n                variables: {\n                  content: note,\n                },\n              })\n            }\n            aria-label=\"Edit\"\n            fullwidth\n            color=\"inherit\"\n          >\n            <AddIcon />\n          </IconButton>\n        </Paper>\n      </Grid>\n      <Grid container>{data?.notes_notes?.length ? \"good\" : \"add\"}</Grid>\n    </div>\n  )\n}\n\nexport default Notes\n"]},"metadata":{},"sourceType":"module"}