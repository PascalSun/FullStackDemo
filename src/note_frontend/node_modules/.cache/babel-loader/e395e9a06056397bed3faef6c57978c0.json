{"ast":null,"code":"var _jsxFileName = \"/Users/Q/Tech/FullStackDemo/src/note_frontend/src/pages/Notes/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FormControl, InputLabel, Select, MenuItem, Input, Button, CircularProgress, Grid } from \"@material-ui/core\";\nimport { useMutation, gql, useQuery, useSubscription } from \"@apollo/client\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NoteCard from \"./NoteCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_NOTES = gql`\n  subscription getNotes {\n    notes_notes {\n      content\n    }\n  }\n`;\nconst ADD_NOTES = gql`\n  mutation addNotes($content: String) {\n    insert_notes_notes_one(\n      object: { content: $content, created_on: \"NOW()\", updated_at: \"NOW()\" }\n    ) {\n      id\n      content\n      created_on\n      updated_at\n    }\n  }\n`;\nconst DELETE_NOTES = gql`\n  mutation deleteNote($id: Int!) {\n    delete_notes_notes_by_pk(id: $id) {\n      id\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => {\n  root: {}\n});\n\nconst Notes = () => {\n  _s();\n\n  var _data$notes_notes;\n\n  const classes = useStyles();\n  const {\n    data,\n    loading,\n    error\n  } = useSubscription(GET_NOTES);\n  console.log(data, loading, error);\n  const [addNote] = useMutation(ADD_NOTES);\n  const [deleteNote] = useMutation(DELETE_NOTES);\n  if (loading) return \"Loading\";\n  if (error) return \"Error\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (data === null || data === void 0 ? void 0 : (_data$notes_notes = data.notes_notes) === null || _data$notes_notes === void 0 ? void 0 : _data$notes_notes.length) ? \"good\" : \"add\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Notes, \"cpWvQhVWir+rUh/kiAOhdO9Dxss=\", false, function () {\n  return [useStyles, useSubscription, useMutation, useMutation];\n});\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/Q/Tech/FullStackDemo/src/note_frontend/src/pages/Notes/index.js"],"names":["React","useState","FormControl","InputLabel","Select","MenuItem","Input","Button","CircularProgress","Grid","useMutation","gql","useQuery","useSubscription","makeStyles","NoteCard","GET_NOTES","ADD_NOTES","DELETE_NOTES","useStyles","theme","root","Notes","classes","data","loading","error","console","log","addNote","deleteNote","notes_notes","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,gBAPF,EAQEC,IARF,QASO,mBATP;AAUA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,QAA3B,EAAqCC,eAArC,QAA4D,gBAA5D;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,SAAS,GAAGL,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMM,SAAS,GAAGN,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMO,YAAY,GAAGP,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMQ,SAAS,GAAGL,UAAU,CAAEM,KAAD,IAAW;AACtCC,EAAAA,IAAI,EAAE,CACL;AACF,CAH2B,CAA5B;;AAKA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA;;AAClB,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2Bb,eAAe,CAACG,SAAD,CAAhD;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,OAAlB,EAA2BC,KAA3B;AACA,QAAM,CAACG,OAAD,IAAYnB,WAAW,CAACO,SAAD,CAA7B;AACA,QAAM,CAACa,UAAD,IAAepB,WAAW,CAACQ,YAAD,CAAhC;AACA,MAAIO,OAAJ,EAAa,OAAO,SAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,OAAP;AACX,sBAAO;AAAA,cAAM,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,iCAAAA,IAAI,CAAEO,WAAN,wEAAmBC,MAAnB,IAA4B,MAA5B,GAAqC;AAA3C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CATD;;GAAMV,K;UACYH,S,EACiBN,e,EAEfH,W,EACGA,W;;;KALjBY,K;AAWN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\"\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Input,\n  Button,\n  CircularProgress,\n  Grid,\n} from \"@material-ui/core\"\nimport { useMutation, gql, useQuery, useSubscription } from \"@apollo/client\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport NoteCard from \"./NoteCard\"\n\nconst GET_NOTES = gql`\n  subscription getNotes {\n    notes_notes {\n      content\n    }\n  }\n`\n\nconst ADD_NOTES = gql`\n  mutation addNotes($content: String) {\n    insert_notes_notes_one(\n      object: { content: $content, created_on: \"NOW()\", updated_at: \"NOW()\" }\n    ) {\n      id\n      content\n      created_on\n      updated_at\n    }\n  }\n`\n\nconst DELETE_NOTES = gql`\n  mutation deleteNote($id: Int!) {\n    delete_notes_notes_by_pk(id: $id) {\n      id\n    }\n  }\n`\n\nconst useStyles = makeStyles((theme) => {\n  root: {\n  }\n})\n\nconst Notes = () => {\n  const classes = useStyles()\n  const { data, loading, error } = useSubscription(GET_NOTES)\n  console.log(data, loading, error)\n  const [addNote] = useMutation(ADD_NOTES)\n  const [deleteNote] = useMutation(DELETE_NOTES)\n  if (loading) return \"Loading\"\n  if (error) return \"Error\"\n  return <div>{data?.notes_notes?.length ? \"good\" : \"add\"}</div>\n}\n\nexport default Notes\n"]},"metadata":{},"sourceType":"module"}