{"ast":null,"code":"var _jsxFileName = \"/Users/Q/Tech/FullStackDemo/src/note_frontend/src/pages/Notes/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FormControl, InputLabel, Select, MenuItem, Input, Button, CircularProgress, Grid, IconButton, Paper, TextField } from \"@material-ui/core\";\nimport { useMutation, gql, useQuery, useSubscription } from \"@apollo/client\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NoteCard from \"./NoteCard\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_NOTES = gql`\n  subscription getNotes {\n    notes_notes {\n      content\n      created_on\n      updated_at\n    }\n  }\n`;\nconst ADD_NOTES = gql`\n  mutation addNotes($content: String) {\n    insert_notes_notes_one(\n      object: { content: $content, created_on: \"NOW()\", updated_at: \"NOW()\" }\n    ) {\n      id\n      content\n      created_on\n      updated_at\n    }\n  }\n`;\nconst DELETE_NOTES = gql`\n  mutation deleteNote($id: Int!) {\n    delete_notes_notes_by_pk(id: $id) {\n      id\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    margin: \"10px\"\n  },\n  addNotes: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\"\n  },\n  showNotes: {\n    width: \"100%\"\n  }\n}));\n\nconst Notes = () => {\n  _s();\n\n  var _data$notes_notes;\n\n  const classes = useStyles();\n  const {\n    data,\n    loading,\n    error\n  } = useSubscription(GET_NOTES);\n  console.log(data, loading, error);\n  const [addNote] = useMutation(ADD_NOTES);\n  const [deleteNote] = useMutation(DELETE_NOTES);\n  const [note, setNote] = useState(\"\");\n  if (loading) return \"Loading\";\n  if (error) return \"Error\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.addNotes,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-multiline-static\",\n            label: \"Add Notes\",\n            multiline: true,\n            rows: 4,\n            fullwidth: true,\n            value: note,\n            variant: \"outlined\",\n            onChange: e => setNote(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => addNote({\n              variables: {\n                content: note\n              }\n            }),\n            \"aria-label\": \"Edit\",\n            fullwidth: true,\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.showNotes,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: (data === null || data === void 0 ? void 0 : (_data$notes_notes = data.notes_notes) === null || _data$notes_notes === void 0 ? void 0 : _data$notes_notes.length) ? \"good\" : \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notes, \"c4R+tGdPPCum1LdnHuRfrfxZai4=\", false, function () {\n  return [useStyles, useSubscription, useMutation, useMutation];\n});\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/Q/Tech/FullStackDemo/src/note_frontend/src/pages/Notes/index.js"],"names":["React","useState","FormControl","InputLabel","Select","MenuItem","Input","Button","CircularProgress","Grid","IconButton","Paper","TextField","useMutation","gql","useQuery","useSubscription","makeStyles","NoteCard","Add","AddIcon","GET_NOTES","ADD_NOTES","DELETE_NOTES","useStyles","theme","root","width","margin","addNotes","display","justifyContent","flexDirection","showNotes","Notes","classes","data","loading","error","console","log","addNote","deleteNote","note","setNote","e","target","value","variables","content","notes_notes","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Input,\n  Button,\n  CircularProgress,\n  Grid,\n  IconButton,\n  Paper,\n  TextField,\n} from \"@material-ui/core\"\nimport { useMutation, gql, useQuery, useSubscription } from \"@apollo/client\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport NoteCard from \"./NoteCard\"\nimport { Add as AddIcon } from \"@material-ui/icons\"\n\nconst GET_NOTES = gql`\n  subscription getNotes {\n    notes_notes {\n      content\n      created_on\n      updated_at\n    }\n  }\n`\n\nconst ADD_NOTES = gql`\n  mutation addNotes($content: String) {\n    insert_notes_notes_one(\n      object: { content: $content, created_on: \"NOW()\", updated_at: \"NOW()\" }\n    ) {\n      id\n      content\n      created_on\n      updated_at\n    }\n  }\n`\n\nconst DELETE_NOTES = gql`\n  mutation deleteNote($id: Int!) {\n    delete_notes_notes_by_pk(id: $id) {\n      id\n    }\n  }\n`\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    margin: \"10px\",\n  },\n  addNotes: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  showNotes: {\n    width: \"100%\",\n  },\n}))\n\nconst Notes = () => {\n  const classes = useStyles()\n  const { data, loading, error } = useSubscription(GET_NOTES)\n  console.log(data, loading, error)\n  const [addNote] = useMutation(ADD_NOTES)\n  const [deleteNote] = useMutation(DELETE_NOTES)\n  const [note, setNote] = useState(\"\")\n  if (loading) return \"Loading\"\n  if (error) return \"Error\"\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.addNotes}>\n        <Grid item xs={12}>\n          <Paper>\n            <TextField\n              id=\"outlined-multiline-static\"\n              label=\"Add Notes\"\n              multiline\n              rows={4}\n              fullwidth\n              value={note}\n              variant=\"outlined\"\n              onChange={(e) => setNote(e.target.value)}\n            />\n            <IconButton\n              onClick={() =>\n                addNote({\n                  variables: {\n                    content: note,\n                  },\n                })\n              }\n              aria-label=\"Edit\"\n              fullwidth\n              color=\"inherit\"\n            >\n              <AddIcon />\n            </IconButton>\n          </Paper>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.showNotes}>\n        <Grid item xs={12}>\n          {data?.notes_notes?.length ? \"good\" : \"add\"}\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Notes\n"]},"metadata":{},"sourceType":"module"}